:: program main

import {
	"foo"
}

struct game {
	int fps
}

// Attaching a method, start::(), to a pointer of type game.
// the pointer is available in the scope of the function via keyword "it"
*game :: start :: () {
	// Read as "the val at (@) 'it' (a pointer of type game)"
	@it.fps = 60

	//it.fps = 60 // Compile error. A pointer of type game does not have a field named "fps"

	await game.Update()
}

game :: func setFps := fn(int newFps) {
	// Since we are operating on a value, there is no need for the @ operator
	it.fps = newFps

	it.start()
}

// Implicitly implements the foo::doer trait
game :: Update :: (float64 deltaTime) {
	while true {
		return 
	}
}

main :: () {
	await game.start()
}

::package foo

trait doer {
	Update(float64)
} 